{% import Exception from './exception.monk' %}

<div class="executable-fragment-wrapper">
    <div class="executable-fragment {{ theme }}">
        <div class="code-area {{ folded ? '_folded' : '_unfolded' }}">
            {% if (isShouldBeFolded) %}
                <div class="fold-button {{ foldButtonHover ? '_hover' : '' }}"
                    :onmouseenter={{ this.onFoldButtonMouseEnter.bind(this) }}
                    :onmouseleave={{ this.onFoldButtonMouseLeave.bind(this) }}>
                </div>
            {% endif %}

            {% if (!highlightOnly) %}
                <div class="run-button {{ waitingForOutput ? '_disabled' : ''}}" :onclick={{ this.execute.bind(this) }}></div>
            {% endif %}

            <textarea></textarea>
        </div>
        {% if (openConsole) %}
          <div class="console-close {{ theme }}" :onclick={{ this.onConsoleCloseButtonEnter.bind(this) }}></div>
        {% endif %}
        <div class="js-code-output-canvas-placeholder">
          {% if (waitingForOutput) %}
              <div class="output-wrapper {{ theme }}">
                <div class="loader {{ theme }}"></div>
              </div>
          {% else %}
              {% if (output && output != "") || exception %}
                  <div class="output-wrapper {{ theme }}">
                      <div class="code-output">
                          {% unsafe output %}

                          {% if exception %}
                              <Exception {{...exception}} originalException={{ true }}/>
                          {% endif %}

                      </div>
                  </div>
              {% endif %}
          {% endif %}
        </div>
    </div>

    {% if (!highlightOnly) %}
        <div class="compiler-info">
            <span>Target platform: {{ targetPlatform.printableName }}</span>
            <span>Running on kotlin v. {{ compilerVersion }}</span>
        </div>
    {% endif %}

</div>
